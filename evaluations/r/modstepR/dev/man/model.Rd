% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{model}
\alias{model}
\title{R6 model (base) class}
\description{
R6 model (base) class

R6 model (base) class
}
\examples{
loModelObj = model$new(arFormula=formula(mpg~.), arData=mtcars, arType='reg')

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{model$new()}}
\item \href{#method-get_formula}{\code{model$get_formula()}}
\item \href{#method-predict}{\code{model$predict()}}
\item \href{#method-get_model}{\code{model$get_model()}}
\item \href{#method-print}{\code{model$print()}}
\item \href{#method-clone}{\code{model$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create a new `model` object.
This class is intended to be used by developers of this library only.
Used for managing the internal model development process only.
This is the base model class that is inherited by all other model classes.
There should be no need for the users of this library to use this class directly.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{model$new(arFormula = NA, arData = NA, arType = "reg", arVerbose = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{arFormula}}{Formula to use. Currently only supports
(1) something like DV ~ .
(2) one DV only}

\item{\code{arData}}{Dataframe containing the Independent Variables (IV) the Dependent Variable (DV)}

\item{\code{arType}}{Specify whether you want to build
(1) a regression model ('reg') or
(2) a classification model ('class')
For classification problems, this currently only supports binary classification problems}

\item{\code{arVerbose}}{Progress Reporting
0 = No Print
1 = Minimal printing
2 = Detailed printing
3 = Debug Mode only}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `model` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_formula"></a>}}
\subsection{Method \code{get_formula()}}{
Gets the formula used by the model
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{model$get_formula()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns the formula used in the model
Before training this is of the type formula(DV ~ .)
After training, it included terms from model.matrix which can include
expanded categorcial column names (one hot encoded names)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-predict"></a>}}
\subsection{Method \code{predict()}}{
(Abstract method) Returns the predicted values for a set of predictors.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{model$predict(arNewData)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{arNewData}}{Data Frame containing the predictors
Data should be passed without expansion through model.matrix (for categorical variables)
Expansion of data frame is managed internall (automatically)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Predictions
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_model"></a>}}
\subsection{Method \code{get_model()}}{
Returns the final model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{model$get_model()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Final Model
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\subsection{Method \code{print()}}{
Prints basic information about the class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{model$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{model$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
