% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_glm_1.R
\name{model_glm_1}
\alias{model_glm_1}
\title{R6 model_glm_1 class}
\description{
R6 model_glm_1 class

R6 model_glm_1 class
}
\examples{
loModelObj = model_glm_1$new(arFormula=formula(mpg~.), arData=mtcars, arType='reg')
}
\section{Super class}{
\code{\link[modstepR:model]{modstepR::model}} -> \code{model_glm_1}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{model_glm_1$new()}}
\item \href{#method-predict}{\code{model_glm_1$predict()}}
\item \href{#method-clone}{\code{model_glm_1$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="modstepR" data-topic="model" data-id="get_formula">}\href{../../modstepR/html/model.html#method-get_formula}{\code{modstepR::model$get_formula()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="modstepR" data-topic="model" data-id="get_model">}\href{../../modstepR/html/model.html#method-get_model}{\code{modstepR::model$get_model()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="modstepR" data-topic="model" data-id="print">}\href{../../modstepR/html/model.html#method-print}{\code{modstepR::model$print()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create a new `model_glm_1` object.
This class is intended to be used by developers of this library only.
Used for managing the internal model development process only.
This is the base model class that is inherited by all other glm model classes.
There should be no need for the users of this library to use this class directly.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{model_glm_1$new(arFormula = NA, arData = NA, arType = "reg", arVerbose = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{arFormula}}{Formula to use. Currently only supports
(1) something like DV ~ .
(2) one DV only}

\item{\code{arData}}{Dataframe containing the Independent Variables (IV) the Dependent Variable (DV)}

\item{\code{arType}}{Specify whether you want to build
(1) a regression model ('reg') or
(2) a classification model ('class')
For classification problems, this currently only supports binary classification problems.
Also, the levels must be coded 0 and 1 for now.}

\item{\code{arVerbose}}{Progress Reporting
0 = No Print
1 = Minimal printing
2 = Detailed printing
3 = Debug Mode only}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `model_glm_1` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-predict"></a>}}
\subsection{Method \code{predict()}}{
Returns the predicted values for a set of predictors.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{model_glm_1$predict(arNewData, arProb = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{arNewData}}{Data Frame containing the predictors
Data should be passed without expansion through model.matrix (for categorical variables)
Expansion of data frame is managed internall (automatically)}

\item{\code{arProb}}{Whether to return predicted probabilities for binary classification problems
Ignored for Regression problems}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Predictions
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{model_glm_1$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
